# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-04-25 17:26
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcceptAnswer',
            fields=[
                ('acceptedansid', models.AutoField(primary_key=True, serialize=False)),
                ('createdon', models.DateTimeField(blank=True, null=True)),
                ('updatedon', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'acceptedanswer',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('ansid', models.AutoField(primary_key=True, serialize=False)),
                ('ans_desc', models.TextField(blank=True, null=True)),
                ('total_upvote', models.IntegerField(blank=True, null=True)),
                ('total_downvote', models.IntegerField(blank=True, null=True)),
                ('createdon', models.DateTimeField(blank=True, null=True)),
                ('updatedon', models.DateTimeField(blank=True, null=True)),
                ('createdby', models.ForeignKey(blank=True, db_column='createdby', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'answer',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CommentOnAnswer',
            fields=[
                ('cmtid', models.AutoField(primary_key=True, serialize=False)),
                ('cmt_desc', models.TextField(blank=True, null=True)),
                ('createdon', models.DateTimeField(blank=True, null=True)),
                ('updatedon', models.DateTimeField(blank=True, null=True)),
                ('ansid', models.ForeignKey(blank=True, db_column='ansid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.Answer')),
            ],
            options={
                'db_table': 'commentonanswer',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DownvoteAnswer',
            fields=[
                ('upvoteid', models.AutoField(primary_key=True, serialize=False)),
                ('createdon', models.DateTimeField(blank=True, null=True)),
                ('updatedon', models.DateTimeField(blank=True, null=True)),
                ('ansid', models.ForeignKey(blank=True, db_column='ansid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.Answer')),
            ],
            options={
                'db_table': 'downvoteanswer',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FavouriteAnswer',
            fields=[
                ('favid', models.AutoField(primary_key=True, serialize=False)),
                ('createdon', models.DateTimeField(blank=True, null=True)),
                ('updatedon', models.DateTimeField(blank=True, null=True)),
                ('ansid', models.ForeignKey(blank=True, db_column='ansid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.Answer')),
            ],
            options={
                'db_table': 'favouriteanswer',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('queid', models.AutoField(primary_key=True, serialize=False)),
                ('que_title', models.CharField(blank=True, max_length=200, null=True)),
                ('que_desc', models.TextField(blank=True, null=True)),
                ('que_tag', models.CharField(blank=True, max_length=45, null=True)),
                ('createdon', models.DateTimeField(blank=True, null=True)),
                ('updatedon', models.DateTimeField(blank=True, null=True)),
                ('createdby', models.ForeignKey(blank=True, db_column='createdby', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'question',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UpvoteAnswer',
            fields=[
                ('upvoteid', models.AutoField(primary_key=True, serialize=False)),
                ('createdon', models.DateTimeField(blank=True, null=True)),
                ('updatedon', models.DateTimeField(blank=True, null=True)),
                ('ansid', models.ForeignKey(blank=True, db_column='ansid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.Answer')),
                ('queid', models.ForeignKey(blank=True, db_column='queid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.Question')),
                ('userid', models.ForeignKey(blank=True, db_column='userid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'upvoteanswer',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reputationpoint', models.IntegerField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'userprofile',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='favouriteanswer',
            name='queid',
            field=models.ForeignKey(blank=True, db_column='queid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.Question'),
        ),
        migrations.AddField(
            model_name='favouriteanswer',
            name='userid',
            field=models.ForeignKey(blank=True, db_column='userid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='downvoteanswer',
            name='queid',
            field=models.ForeignKey(blank=True, db_column='queid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.Question'),
        ),
        migrations.AddField(
            model_name='downvoteanswer',
            name='userid',
            field=models.ForeignKey(blank=True, db_column='userid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='commentonanswer',
            name='queid',
            field=models.ForeignKey(blank=True, db_column='queid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.Question'),
        ),
        migrations.AddField(
            model_name='commentonanswer',
            name='userid',
            field=models.ForeignKey(blank=True, db_column='userid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='answer',
            name='queid',
            field=models.ForeignKey(blank=True, db_column='queid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.Question'),
        ),
        migrations.AddField(
            model_name='acceptanswer',
            name='ansid',
            field=models.ForeignKey(blank=True, db_column='ansid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.Answer'),
        ),
        migrations.AddField(
            model_name='acceptanswer',
            name='queid',
            field=models.ForeignKey(blank=True, db_column='queid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app.Question'),
        ),
        migrations.AddField(
            model_name='acceptanswer',
            name='userid',
            field=models.ForeignKey(blank=True, db_column='userid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
    ]
